#!/usr/bin/perl
# This script generates a driver file to be used with Phil Perillat's processing scripts
# Jean-Luc Margot, April 2002

die "Usage: perl_drv fbase codelen smpperbaud bin1 numbins cohavg spcfftlen spcfftkeep numpol poltouse bits dir \n" if ($#ARGV != 11);

$fbase = $ARGV[0];
$codelen = $ARGV[1];
$smpperbaud = "$ARGV[2]";
$bin1 = $ARGV[3];
$numbins = $ARGV[4];
$cohavg = $ARGV[5];
$spcfftlen = $ARGV[6];
$spcfftkeep = $ARGV[7];
$numpol = $ARGV[8];
$poltouse = $ARGV[9];
$bits = $ARGV[10];
$fdir = $ARGV[11];
$out_file = $fdir . "/drv." . $fbase;

open (OUTPUT, ">$out_file") || die "Error opening output file!\n";

printf(OUTPUT "# key         value\n");
printf(OUTPUT "fbase 	     %s\n",$fbase);
printf(OUTPUT "#\n");
printf(OUTPUT "codelen	     %d\n",$codelen);
printf(OUTPUT "smpperbaud    %d\n",$smpperbaud);
printf(OUTPUT "bin1          %d\n",$bin1);
printf(OUTPUT "numbins       %d\n",$numbins);
printf(OUTPUT "#\n");
printf(OUTPUT "cohavg        %d\n",$cohavg);
printf(OUTPUT "spcfftlen     %d\n",$spcfftlen);
printf(OUTPUT "spcfftkeep    %d\n",$spcfftkeep);
printf(OUTPUT "#\n");
printf(OUTPUT "numpol        %d\n",$numpol);
printf(OUTPUT "poltouse      %d\n",$poltouse);
printf(OUTPUT "#\n");
printf(OUTPUT "bits          %d\n",$bits);
printf(OUTPUT "machine       pfs\n");
printf(OUTPUT "#\n");
printf(OUTPUT "dcdfftlen     131072\n"); 
printf(OUTPUT "dcdpacked     0\n");
printf(OUTPUT "codestodecode 999999999  process entire file\n");
printf(OUTPUT "removedc      1          remove dc prior to decoding\n");
printf(OUTPUT "compcodeprog  /home/pfs/bin/compdsncode\n");
printf(OUTPUT "#   suffixes for programs:\n");
printf(OUTPUT "sufraw      raw\n");
printf(OUTPUT "sufdcd      dcd\n");
printf(OUTPUT "suftrn      trn\n");
printf(OUTPUT "sufspc      map\n");
printf(OUTPUT "sufslc      slc\n");
printf(OUTPUT "sufeng      eng\n");
printf(OUTPUT "sufpha      pha\n");
printf(OUTPUT "sufscl      maps\n");

